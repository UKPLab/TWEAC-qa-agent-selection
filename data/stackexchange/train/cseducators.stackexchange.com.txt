What should a teacher do with information about plagiarism before the final submission
Best practices for letters of recommendation in CS
Avoiding difficulties when teaching with metaphors
Review of Information Theory Lab
Working with students with specific secondary skill
What are good models for an Honors Program for CS students?
Tips for self-study with just a textbook and google
What would be reasonable to include in an Introduction to AI class for a 7th-8th grade after school program?
What are good models for a Tutorial System for lagging CS students?
How to make term reports, easy to do (and secondly effective, and accurate)
Advances in CS appropriate for CS1 and CS2 made by female computer scientists
When a student submits a work that is a copy from a colleague, should you also punish the student that made the work?
Best puzzle type to foster logical thinking
Working on practical projects as a team - good or bad?
Best Training App Ideas
Evaluating resources for teaching myself reinforcement learning
Who should own the intellectual property on a program developed in classes?
Where can I find a breakdown by race and gender of US CS bachelor's degrees?
CS-oriented Ice-Breaker Games
Teaching the humble for loop
Teaching the tradeoffs of the foreach loop
Learning in a developing field
Learning from research papers in a developing field
Note-taking for self-studying
Is it important to teach pointers in a first course using Java?
Is SICP appropriate for an advanced high school CS course?
How can I help students develop intuition about a programming language?
Jargon/Vocab about variables--- yes or no?
What 'procedural' habits to break when teaching 'functional' programming?
Lesson ideas for introducing macros in C
Active learning for boolean algebra
Lesson plan for teaching java graphics
Placement of App Inventor in high school CS curriculum
How should I advise an undergraduate who wants a career teaching CS?
What non-programming book is vital for learning the CS mindset?
Order to Teach Topics in an Intro Programming Class
How do I explain blockchain using an analogy?
Why would mutation be considered by some as a difficult concept to grasp?
Framework choice for AP CS A students: Swing or JavaFX?
How can I make database normalization more clear?
Using another person to motivate
Teaching high-level versus low-level concepts
Ideas for introducing databases to Android development students
Teaching syntactic sugar
Why did the percentage of CS bachelor's degrees going to women peak in 1984?
How do I teach git to a teenager
The order of subjects in beginner's curriculum
How to teach students to work with multiple layers of abstraction?
Why did interest in CS majors plummet in the United States after the mid-80s?
Working around language quirks
Testing students on recursion - tracing by hand
Avoiding confusion about precedence
The Tao of TeaChing (Making Mistakes in Front of the Class)
How to teach algorithms: implementation or application?
Lab ideas for information theory
Book recommendations for rigorous CS books
What can the instructor do to overcome the Authenticity Bias in students?
Explaining why styling should not be done directly in HTML
What should be in a CyberSecurity Course in secondary school?
How do I teach about inequity in computing resources?
Differentiating Inclusive from Exclusive Or
Dealing with students who are underly-motivated
Does/should a CS education include information about responsible use of human subjects in research
What is a good way to explain computer viruses?
Curricular Support for a CyberPatriot Club
What ethical practices do students (as potential software engineers) need to be trained in?
Teaching when to use MyBlocks
What can CS educators do to help teachers of other subjects include computing in their teaching?
What's a good initial lesson for teaching arduino?
What are some good real-life examples of pipelining, latency, and throughput?
Should students be taught to be first and foremost: scientists or mathematicians?
Books to use for iOS App Development
How to best use lab periods
How to convey how much computing power has grown since the 1960s?
What is a good design for a Capstone Course in CS?
Effective ways of teaching regex to students who know Java
How to figure out what I need to search for in order to create a program?
Books that summarize pedagogical research within our field
What part does formal Ethics training play in your curriculum?
Using zyBooks and labs
Which of the following programming languages will help me better to teach the basic concepts of CS and why?
Learning fundamental differences between functional programming and Object Oriented Programming
Breaking down the operations when auto-casting gets complex
Historical standard order of topics in imperative programming textbooks
Incorporating algorithmic complexity in grading
Strategies for independent learners to identify gaps in their knowledge
How can I determine if a student would enjoy or has an aptitude for CS?
Ways to advance the field of computer science education as a non-researcher
Teaching OOP in Java, to students who already know Java
Independent research on bootcamp job placement claims
Strategies for self-learners to transition into working on larger projects
How to explain combinatorical principles like the rule of product to students who "just don't get it"?
Good, Motivating Examples for Algorithmic Complexity
How to introduce Scala to a team of Java developers without being boring?
Techniques for encouraging pair programming
Exercises for teaching GUI / Windows interaction basics
Introducing Pair Programming
What hardware can I use when teaching Compiler Language and Assembly Code
Distance or Part-Time Graduate/Doctoral Study
Attempting to prevent learning of poor techniques when self-teaching
Paper Books or eBooks?
Tools or methods to make projected code easier to follow
What are some examples that could be used when teaching subroutines or methods in the context of OO?
Students can solve programming exercises but not explain their solutions. What to do?
What professional development events or conferences are out there for CS educators?
Intensive basic VBA course - which variables to teach?
How to effectively teach strings and string literal constants?
How to teach Stack Overflow more efficiently?
How many lines does your code have?
Finishing College with Employable Skills
How to answer "functional programming is useless"?
IDE vs Editor and terminal for CS1
Workshops on Cloud (Azure)
LINQ to SQL alternative C# Visual Studio 2017 MVC
How can we motivate students to review each other's code?
How can I effectively manage peer evaluation among my students?
Introduction to programming class: use Spreadsheets to introduce fundamentals
Course for the more practical aspects of software development
Best Practices for introductory teaching
Teaching a blind high school student
Teaching pointers (C) to a Java guy
Teaching C#, Java, etc. to students who are bad at OOP
Minecraft to teach programming?
Good example of what isn't a system call?
What could be the possible advantages of teaching Scheme as first programming language?
Choosing Java-like language for teaching web development
How to teach beginning students how to find and fix syntax errors?
Helping students adjust to using industrial-strength IDEs
Plagiarism checks for source code
Introducing file systems to students who really don't understand
Is there any purpose to having students do fiddly cache homework assignments?
Does teaching an intro course with a functional language really help level the playing field?
Assisting students with large programming assignments takes too long in class
What does a person with an undergraduate degree in CS still need to learn to be employable as a developer?
To plan or not to plan that is the question
Is it a good idea to have students see syntax much earlier than they write it themselves?
Show students the consequences of their design decisions
Why don't more universities teach revision control?
Is the CRT still relevant when introducing display hardware
One lecture on VCS: What needs to be covered?
Mini-Projects that can be covered in an 1 hour Haskell tutorial
Functional Programming - using F sharp
Teaching information security to students without basic IT knowledge
Scheme - Which implementation to use for teaching
Scheme - Which book To Use
Could you recommend books on concurrent programming?
How to motivate game design/development students to do more than the minimum on homework
Gifted Student Presentations
Giving Students a Break
Is there a good textbook for writing an interpreter in an imperative language?
Physical analogy to introduce a Delegate in .Net programming
What does a certification program for CS high school teachers need to include?
Teaching interaction design to potentially disinterested students
Pick-me-up exercises for after-lunch brain death
Advantages of teaching basic javascript through typescript
Is there any value in teaching goto statement or flowcharts?
Is there any value in teaching pseudo code?
How do I convince students to use Boolean algebra?
How to answer questions about how I became interested in programming?
Example for For vs While Loop (in Java)
Using physical activity to explain the nested for loop
Teaching students that printf() is not the same as return
Is it bad to introduce language features in ways that are different than they will be used in practice?
Teaching Arduino---but not just "monkey see monkey do"
Looking for software that would enable me to cast a screen over LAN
How do you assess students' understanding of abstraction?
What resources would you recommend for K-5 Computer Systems Concept of the CSTA K-12 Standards?
Is there independent evidence that physical computing improves engagement
How to handle objections to the wording of test questions or answers?
Answering student questions as they work outside class
Computer Science vs IT vs Digital Literacy
How to keep students heads from exploding from complex, interconnected topics
Going from syntax to CS concepts
Peanut Butter and Jelly Ending
Real world example application built with Python and JavaScript?
Encouraging Critical Thinking On Programs Before Students Write Them
Teaching Critical Thinking
Making Technical Presentations Safe for Novices
Good resource for practice problems for inductive proofs
Should I share CS jobs stats at a Girls Who Code session?
Easy on-boarding for grad students to lead outreach?
Could physical (i.e. lego) models help teach CS?
How to explain the int() function to a beginner
Is there some meaningful percentage of students who can't learn to program?
Encourging Growth mindset, in computing lesson
Make it easier, and quicker to get to the start
Use of “learnable programming” (via direct manipulation) software, in teaching
How can we educators improve a lot of the negative behavior within the CS community
How to prevent dictating the solution when tutoring
How should I respond to a student who proposes a "weak" analogy?
What is the pedagogical value of Conway's Game of Life?
Computer Engineering student with Holes in my knowledge (i want to improve)
Teaching intermediate Java to students familiar with C
Help in choosing elective subject
Research on gender and attainment in CS
Equivalent of PISA study for standardised assessment of skills on computational thinking and programming?
Clear example of the Object-Relational Mismatch
Teaching students how to construct regular expressions (and other "translation" style problems)
Teaching NFAs after DFAs
Online courses to form or improve a CS resume?
Conflicting meaning, between exam board / teaching resources, and technical meaning
Engagement advice on Creative computing
Toy Databases for Class Examples/Homeworks
How do I construct a basic lesson on computational complexity and undecidability?
Best Git strategy for workshop code (starter -> end solution)
Search for a useful interactive programming environment
Is there a textual alternatives to UML diagrams?
Explaining the Value of Knowledge of Digital Logic
Agile / SCRUM Course Structure: Downsides? Resources?
"Franklin" Method for learning good programming?
A lab activity for the Y-Combinator
How to stop being The Oracle
Resource recommendations for teaching OOP via a practice-oriented example
What's the best way to assess programming?
Paired programming with an odd number of students
Single-dimensional array and simple looping activities of significance
Quick and easy intro to computer science for kids for an Engineering Field Day
Enjoyable and\or fun way to explain cmake
The order of questions on examinations
What should be included in a best practices C course?
A better database management system, for teaching databases
What is a (simple definition of) a development environment?
Where, sequentially, do Interfaces sit in an introduction to Objects?
Reducing bias, from lesson that improves, as taught to a number of classes
Is it possible to teach selection (`if`) before variables
Advantages and Disadvantages of Teaching Block-coding Languages Such As MIT's App Inventor?
Allowing students to work cooperatively on a computer, and retain access to their work
Teaching C++ to students that know Java
What are good class exercises on design patterns?
How far do you take modular expressions?
What student exercises force them to modify and extend their own thinking process and methods?
Is it possible to study too many things in parallel?
Using Oracle's Java Documentation as a Teaching Tool
What are good examples that actually motivate the study of recursion?
Big-endian, Little-endian
Teaching zip and range in Python 3
Motivation for learning C++ when you know Java
Merits of teaching VCS as enrichment
Programming language for teenagers
Opening a machine learning course in high school
Popular demonstration of cryptographic tools
Using questions from a code-competition website in homework and exams
How to explain the concept of a variable to a 9-year old?
Is it worthwhile to teach assembly nowadays?
Is there any pedagogically motivated reason to teach quadratic probing?
How to teach image processing and computer graphics to a blind student?
Pedagogical reasoning behind a minor difference in two loops
Finding tutoring in Maths / CS
What are good resources for self learning Finite Mathematics for a CS Student?
Simple explanation of JPEG working principles
Order to teach looping constructs in a non ideal language
When does excessive collaboration become plagiarism?
How to START an Objects-First Course
What are the core concepts of discrete mathematics within CS?
Encourage students to learn and use advanced design
Answering “How is this useful to me?”
Is there evidence of differences in the outcomes of objects-early vs objects-late?
How do teachers motivate students to persevere and learn?
What Notation for Teaching Boolean Logic?
Object Design Lab
How widespread is the use of the PEP/8 assembly simulator in education?
Explaining to students why to use double instead of float (unless there's a very good reason)
Boolean Logic: How to Explain + as OR?
How to avoid misconceptions about while loop when using null loop
The Fifth Element or What Elements Are Correlated With CS Success and Does It Matter?
App Lab/JS confusion between strings and variables
NodeJS and Javascript libraries are overwhelming students
How do you teach something when you don't know it yourself?
How to phrase questions about spotting design issues in programs
Textbooks: Yes, no, roll your own?
What are the tradeoffs of allowing students to submit test corrections?
Blockchain cipher suitable for preschoolers
How to help students comprehend the HTML document flow?
Should I teach that 1 KB = 1024 bytes or 1000 bytes?
Is it bad to force my students not to return early?
Is stressing too much on formalism acceptable?
My teacher said that java is pass-by-reference when the type is not a primitive
The Starting Gun vs Freedom of Choice
How do you deal with Lone Rangers in group projects?
Use of jshell in AP CS A
Which non-programming skills help make a good programmer?
A meaningful exercise that requires using a destructor
Usefullness of Study Guide
Should I Provide Answers To Exercises?
What are the advantages and disadvantages of cumulative vs percentage grading?
How Effective Is "Rosetta Code" as a Teaching Technique?
How to help students avoid being distracted by bells and whistles
What should be included in student portfolios for CS?
An exercise in utility
What IF Thinking
How do you teach Big O to high schoolers with varying degrees of math exposure?
Test takings strategy tragedy
For a beginner, is it better to start with C or a higher level language?
Resubmitting Projects
How to give assignments that require heavy computational resources?
How can we teach good naming practice for students learning Java?
What are healthy, productive ways to encourage students to progress to more advanced constructs as opposed to staying with the familiar?
What resources and data sets are available for teaching big data courses?
What are "general purpose programming skills"?
How can I speed up the construction of high quality testing materials?
"Computer sciency" and "practical" exercices involving dictionaries
How to collect and grade Xcode work
Lab Requirement in AP CS A
What screencasting tools can be used for online teaching
Resources for the Praxis CS Test
What are the advantages/disadvantages of teaching how to implement Nodes, Linked Lists, Stacks, and Queues before showing built-in implementations?
Criteria for admission to AP CS courses in high school
Process Scheduling is not "Process" Scheduling - Should I disclose it to students?
Once implicit/inferred typing is introduced, how can I impress upon students the importance of not abusing it?
Interesting Programming Exercises to Teach Inheritance?
Should we merge technology departments with the science departments?
Constructing a curriculum from multiple resources for complex subjects
How Can I Explain The Concept Of Zero Knowledge Proofs To Students
Is it better to lie to students or to be pedantic when teaching Intro CS?
Is it ok to use logic programming(like Prolog) as students' first language?
Is there a better way to validate student learning?
Will you tell students that Algorithms + Data Structures = Programs now(21st century)?
Should I correct mistakes in student presentations?
Use of programming aptitude test in CS program admission
How to teach sums and asymptotics to students who don’t know limits
Why isn't Functional Programming Taught First?
Research into the use of symbol names, in programming, and how it affects learning
Statistics on functional programming in CS1
Can assignments be graded using blockchain?
Student Teaching Minetest Modding in school as club
How to teach a person to enjoy programming?
At what age should someone know what they want to "be"?
How can we best inform potential students of the nature of CS?
What physical examples can I use for public key/asymmetric encryption?
Are there companies that allow to be free when learning and teaching?
Best Way to Explain Distinction Between Void vs. Return Functions in JavaScript
What are the pedagogical methods for teaching programming?
The confusing Unix permissions terminology
Difficulty of algorithms homework problems
How can Chatbots be useful in CS education?
Textbook on Optimization
Becoming a master from a newbie at Computer Science and Electronics
Courage to Attack Difficult Questions
How to structure a Predictive Keyboard project similar to GBoard
Looking for puzzle/game programmes, so students can write solvers
What advantages do students who learn how to touch type have?
Would it be beneficial to learn computer science (or other computer related stuff) from 5-6 year old material?
Students frequently distracted by peers and games
How it's better to teach web development - videos or articles?
Easy to use database for HS students
Are programming contests beneficial to students?
How important is it that I know all of the words for the technical terms when mentoring in my second language?
What are the "intangibles" that distinguish one university's CS program from another?
Advice for becoming more confident in programming
Best way to pass on the problem solving experience
Teacher Community - Using CS50 for AP
In self-teaching, how can I move from basic tutorials to more complex work?
Where one can learn CS in very rigorous way?
How to retain technical information about new features?
How is computer science (and education) different today than some decades ago?
What can be the causes of the difference in student performance?
Why are pointers a key topic in a CS curriculum and oft cited as something people don't get?
Short foundational lessons for 7-8 year olds
How Can I Apply Spaced Repetition To Teaching CS?
Study Advice for a CS Student
Why do we count starting from zero?
Book recommendation: basic, broad and solid overview for advanced learners
How to convince students that self learning is an important skill?
Small to medium scale exercises about Haskell's higher abstractions
How to give students practice with streaming computation?
Will I Regret Using Python As A Teaching Language When I Later Need to Teach Static Typing?
What belongs in a low-math undergraduate AI elective besides ML?
Lab ideas for set theory
Methods for engaging students when teaching unpopular or unfashionable topics
Python function has access to global variables, and doesn't need passed arguments
How to gamify the learning management system
Software to produce an interactive presentation?
Data and Database modelling books
How would you explain what is a race condition to a five years old
Example for Introduction to Generics in Java
Need a good "streaming" software for coding tutorials/workshops
First project in my second year data structures intro
Mental Model of Type Conformance/Subtype Polymorphism
Project based on game 2048
What is the difference between computer science and computer engineering in brief
Explaining why arrays are important for statisticians
Beginner Javascript course - recommended books
What are Macros in programming language am little bit confuse . why we use them for which perpose?
Exercise or example to reinforce idea of functions?
Why does array index not start from -1 why have indexes to be positive?
Teaching binary encoding - using different symbols
Improve motivation in the final part of a project based course
How can I remain a programmer and move into currently "hot" areas?
What is good age to start learning programming?
Best way to install and maintain windows 10 in a computer lab
Is it okay to teach C++ to my 7 year old brother?
Should one study programming by doing hard problem?
Java or Kotlin for beginners (procedural programming knowledge is existing)?
Learning disabilities as a barrier - should I stop learning?
Standardization of software
Why some students think that programming is difficult and hard to learn, how I convince my students that programming is not difficult as they think?
Making induction meaningful
What makes a good explanation?
Why do educators not set an upper bound for the amount of times we're allowed to compile code?
Why and how is it efficient to process sorted arrays than unsorted arrays?
Advise on a class project
What is the best way to learn an object oriented programming language with framework, data structure and alogrithms?
Should programming assignments be graded based on results from unit tests or based on the similarity to the correct implementation?
JavaScript to teach Theoretical Computer Science
How can I improve my understanding in Computer Science?
Code highlight for classroom use
How can I set up and deliver a Computer Hardware Course for the first time?
Do you know of a complete textbook for teaching databases?
How to explain ETH to undergraduate students?
How to write a grading rubric for coding assignments?
How to learn to program compiled languages efficiently when coming from an interpreted language?
What is a good teaching example/application for jagged arrays (2d arrays with irregular row lengths)?
How to learn to solve trees, graphs questions for competitive programming
Any simple Python GUI projects for beginner/novice programming students?
Quizzes after lectures
Which image rotation libraries use the Paeth algorithm?
Curriculum choice for AP Computer Science A
Is learning C++ recommended for beginners?
latest Book (2018/19) for Computer Science for Grade 2 to 8 students
What's a good unit testing assignment for Android?
C# Array Lesson Plan
Students seem to be unable to use code to express their ideas. Is the teaching methodology improvable?
Angular vs React vs Vue
Using online courses instead of / in addition to traditional lecturing
Automatic grading of test-cases
How bad is a Computer Science course that doesn't teach Design Patterns?
Online Code Review Scripts Like Udacity
About the ACM and IEEE-CS Computing Curricula
Do some websites block school building/classroom IP networks because they mistake us for possible DDOS?
Is the algorithm-recipe analogy a good or a bad one?
How to teach operating systems development nowadays?
Examples of innocent looking faulty code for shock effect
Turtle examples for loops and variables, or even something else
How do you teach Theory of Automata / Formal Language Theory / Computation Complexity?
Teaching Revision (Change) Control Systems In High School CS Classes
What are the essential ideas that students need to know about Artificial Intelligence?
What teaching techniques can be used, in teaching students from a medical background, to improve their programming?
Thoughts on language for Intro to Data Science?
How can I get through very long and very dry, but also very useful technical documents when learning a new tool?
How do I deal with students being unkind to each other when I'm not there?
open source MOOC platforms
how to motivate student that programming will give bright future to them?
How to make project in java language, for students who doesn't know java?
How can programming skills be improved?
Pedagogical issues with Stack Implementation
Suggestions for teaching selection sort with candy
What is a file?
Concrete example for polymorphism use?
How to teach C++ language to beginners of (BSCS) students who have no any idea about it?
How to introduce Kotlin in a Programming Languages course
AP Computer Science Principles and Unity
how can i build up interest in learning some dry but important subjects of BS(CS)?
Why do computer-science majors learn calculus?
How can I improve other programming languages while having command on one language
Hardware (cameras, headsets) for TEALS supported classrooms
Why Computer Science students learn Digital Logic Design?
Should an educator define terms rigorously?
How can I do the best assignments as being a computer science student?
How to make students confident enough so that they stop copying another's code assignment
Discrete function is also a math function?
How can I build up the understanding of a project?
Hand-on ideas on tutorial on setting up a cloud-based server
Through what basic programming language can beginners easily get the concept of programming?
How to introduce problem solving to primary school pupils?
On studying Computer Science vs. Software Engineering to become a proficient coder
How does IB Computer Science compare with AP Computer Science?
How to make perfect documentation of FYP with less plagiarism?
What technique should be used to make video tutorial for BS(CS) students?
Why do computer science students learn electronics and electric circuit analysis?
How to create webpage slides for teaching?
How to teach so that your student doesn't feel stupid?
How To develop One's Interest in Programming
How to make sequence diagram?
What are some good problems which can be solved with a queue?
What do I do if my computing teacher does not teach the subject properly?
Projecting the In- class demo screen
What to do when pupil destroy lab equipment?
Are there any resources out there to continue developing my students' programming skills after Code Combat
Anyone teach web development? How do you assess it?
Recent Graduate becomes a teacher
Is it easy for professors to get academic versions of software from IBM?
Are There Exercises To Build Software Development Research Skills?
What do A-level students, that have not done GCSE, struggle with?
End of Year Movies For CS Classes
Shallow, broad and general introduction to programming
Creating Interactive Gnu/Linux shell programming courses
Assignment repositories
Publication outlets for research by undergraduates?
Python IDE for beginners
How can we determine which students are a good fit for an educational program?
Is it a good idea to teach algorithm courses using pseudocode instead of a real programming language?
Array or vector? Two dimensional array or matrix?
What are some good introductory projects?
Framework vs Vanilla JS for students
How should one go into learning algorithms and data structures? What do you think is an efficient way to do so?
Why teach C using scanf without talking about command line arguments?
A real world example for the divide and conquer method
This question is for anyone who has read Introduction to Algorithms by MIT press 3rd edition - Exercises, how to make them easier?
What is the closest pair problem useful for?
Method for keeping records in a computer science notebook?
Classification of programming exercises
Abstract data type that has "include" "remove" and "is in" and only those
Bit stuffing in ethernet
How to recast an ASPX application as Object Oriented
Spring core exercices
Any relevant research in Motivation?
Explain to someone that programming isn't just all "if"s and "else"s
Abreviation of practical work assignment?
System to validate run time complexity requirements
Tell me a book ( or resources) for creating a good terminal based workflow (for building, debugging) for c++ based project development
What are competitive programming problems that require a tree data structure to solve them?
Interfaces and Greenfoot
How can i solve this problem using recursion?
Open Source Training
