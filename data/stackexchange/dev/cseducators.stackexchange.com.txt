How can I set up Eclipse/eGit/GitHub in a way that is easy for students?
Motivating examples for switch/case in Java
How can I explain lambda calculus to my class?
Integrating Graph Theory into AP CS A
How to explain lambda expressions
How to bring attention to computational complexity?
Should CS students be doing their tests on paper?
Introducing the MVC pattern along with JavaFX
How to teach to write optimized code
Pseudocode or Flowcharts?
Interview lesson on "Computational Thinking"
Justification for an objects-early approach to introductory programming
Opportunities for Interdepartmental Collaboration
How can I help my students to think algorithmically?
Looking for a block-based programming language for AP CS P
Thoughts on copying and pasting code?
Intuitive example of an NP problem
When should I scrap my projector for a blackboard?
What would be a good first choice to teach game programming to beginners?
How is your teaching affected by how you learned?
Do you see the "Bimodal Distribution" too?
Do your students pay attention when you speak?
Undergrad level computer architecture course
Explaining pointers to highschoolers
What to gather feedback on?
Principles of SOLID in OOP
What is the best layout for a Middle School computer lab?
What are some good examples of using a stack data structure?
Benefits of explaining low-level architecture in a programming class
How to teach the value of the command line in high school?
Introducing image processing - Should I teach the math
How do I convince my students that visual programming is real programming?
How to explain what code is to my parents?
How to stress the importance of testing code?
Do you use any teaching assistant tool in your CS1 lab classes?
Should unit testing be taught in introductory programming classes?
How do I scaffold students toward building meaningful projects?
What statistics should be in a computer science degree?
How can I explain the difference between CS and coding to a layperson?
How to deal with very low performing students?
Overcoming a friend's self-discouragement
Is asking students to debug existing code better than having them write new code?
How to overcome the TDD/BDD time fallacy
How important is learning Binary for first-year college students?
Can sharing learning stats be beneficial to guide beginner students?
While giving an introduction to the Internet, should I talk about the risks?
Transition from Java to Python
Priority Queue practice vs examples
How to handle students who excel at coding but aren't interested in theory
To what extent should UML be covered in the context of a degree?
Balance between teaching and projects in a club
How do I teach ethics in hacking?
How should the paradigm shift associated with functional programming be approached?
Should test cases be made available to students for assessed assignments?
How should floating point inaccuracies be explained and justified?
A quick ruby crash course
Starting open source
Curriculum Design for a Unit on Alan Turing and His Impact on CS
Multi-client to server connection demonstration
How to teach a flipped course based on the AI MOOC?
How to prepare students for bias in industry
Demonstrating the possible dangers of SQL injection
Uses of high school Computer Science: where can it lead other than university CS?
Curriculum choice for AP Computer Science Principles
How do you teach EVERY student?
Dealing with students who are overly motivated
Talking about new/active subfields of CS to inspire students
How to supplement Khan Academy
How can I automate the grading of programming assignments?
How can I prepare CS majors for non-programming jobs?
What intro CS coursework is most useful for life science students?
Explaining access levels and visibility in OOP
Is it worthwhile for college professors to join SIGCSE?
Is it worth it for high school teachers to join SIGCSE?
CS connections to Life Science for ages 14-18?
How to teach competitive programming?
How to integrate CS when learning about DNA/RNA/protein
Event-driven or polling for beginning programming environments?
How to deal with students that don't like CS?
How should educators ensure their curriculum remains relevant over time?
Teaching "math function" vs. "CS function"
How do I teach "math equality" vs. "CS assignment" vs. "CS equality logic operator"?
Teaching "CS integer" vs. "math integer"
How to adapt pair programming to a shared terminal environment like Cloud9?
Classroom use of a limited port scan in the wild?
How to communicate expectations around "rabbit holes"?
What would be a good analogy for IP addresses and ports?
How can I convince my fellow CS teachers that reaching every student is a worthwhile goal?
How important is "delivering the content" of a course?
Do Python and Java lead students to construct different mental models of memory?
Lambda expressions exercises and practice
Where can a student independently learn elementary recursion, preferably in Java?
What advantages/disadvantages have you seen with Pair Programming in the classroom
What are effective ways to prepare students for the AP CS Principles Exam?
Good datasets for intro CS courses?
Is there a compilation of AP CSP scores by curriculum?
How should students be encouraged to reflect and improve after summative assessment?
How do I approach teaching Python to 12-year-olds as a first-time teacher?
How do you encourage students to take criticism of their code constructively?
What is a good analogy to introduce databases and SQL?
What are the benefits/uses of a SMART Board in CS education (or are there none)?
The impact of switching to Java 10
How do you make your CS lectures more interesting?
Should teachers enforce standardization of spacing and braces?
Unit Review for boolean algebra
Should Java Static space and Memory Model be a part of AP CS
How to document the developed work using an agile methodology?
Explaining how the Internet and the World Wide Web work
Uses of selection in programming (if, switch etc)
How to tell a student that s/he should enroll in a different program?
