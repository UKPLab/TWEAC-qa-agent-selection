What autograding software do folks use for Java code?
Is it possible to ensure division of labor on a group assignment?
Objects Lab Before Inheritance and Polymorphism
Teaching Induction to Prove the Correctness of Algorithms
Should the first Programming/Algorithms class be taught in pseudo-code?
Cheating on labs
Analogy for teaching recursion
Using Processing as an entry point in an Introductory Course
Should assembly language be taught in an introductory course (or soon after)?
How can I convey the idea of a programming language vs. a markup language?
When teaching Web Development, should server or client side come first?
Recommended IDE for teaching web development to beginners
What are effective approaches for teaching dynamic programming?
Using microcontrollers in an Introductory course
When should concurrency and parallel multi-processing concepts be introduced?
on-What are pre-requisites for teaching version control to a high school CS class?
How does one create a balanced AI curriculum in light of the popularity of Deep Learning?
How can I integrate teaching source code control (Git/Mercurial/etc) into my introductory CS class?
Do automatic style hints help students to understand the language they're learning?
How to raise students' security awareness in programming?
What to consider when choosing version of Python?
In a course about Turing machines, how many questions like "Construct a Turing Machine that does X" should I include?
Should I have written tests on basic programming skills?
Should I teach modern web development in an introductory programming course? How?
Best Practices / Effective Strategies For Building Diversity In High School CS Programs
Scheme vs Haskell for introducing functional programming
What qualities should be considered when designing a front end project?
What can Snap! do that Scratch cannot?
Explaining basic html structure
How to encourage participation in the national olympiad in informatics?
Database theory (normalization) for beginners (adult education, MS Access)
How to "teach" CSS for students?
How to get girls more interested in computer science?
How to teach why indentation is important
How to explain to people the importance of algorithms in computer programming?
The use of the Octal system
Designing rubrics for AP Computer Science-style free response questions
What is a good analogy for the Object Oriented paradigm?
Command-line Java in AP CS A
What kind of game (in Scratch) would require use of a list?
Programming languages specifically designed for beginners
How can I maintain interest in front end?
Presenting Mapping Reducibility (for P vs NP)
What are the merits of including the history of computers in the entry level curriculum?
Do I need Prolog to teach logic concepts?
How do you structure broad, open-ended, freely chosen projects so that students use class time wisely?
Teaching students to hunt for and debug their own errors
Programming curriculum for elderly students
Dealing with students who complete labs very quickly
Lesson Idea: Arrays, Pointers, and Syntactic Sugar
Is it more effective to teach low level languages before high level ones or vice versa?
Real life examples of 0-indexing
Ruby backend framework choice: Ruby on Rails vs Sinatra
Encourage students to be independent
Self guided learning about audio processing
How can I discourage poor design while using automatic grading of submissions?
How to avoid getting emotionally attached to my students' projects?
Analogy for static objects (or members)
Workflow for Code Submission
Introducing A* Search Algorithm
Are userscripts a good teaching tool?
Simple Pointer Examples in C
Effectiveness of Parsons Problems
How to illustrate scope problem when creating variables inside `if` statements in Java
Note-taking policy: laptops, or by hand?
Supplementing Curriculum with Online Resources
Video Games during class
Computers are down; what's in your bag of tricks for teaching CS when they can't get on a computer?
Final exam advice
What makes imperative programming easier or harder to learn?
Assignments for Introductory Level Processing
What program follows "hello, world"?
Excel macro recorder exercises
Assessing programming skills of students under 18 years
What are good sample programs for learning to use a debugger?
Significant algorithm from CS for DrRacket that emphasize cons, car, and cdr
In-class server access limits
Introducing self containing objects (Node)
Basic OOP practice exercises for inheritance and polymorphism
How to provide individual grades for group project work?
Most beneficial CodingBat problems for AP CS A FRQs
Teaching coding paradigms and concepts with specific context
How can I show the value of best practices?
Teaching loop invariant choice
Good beginning assembly language for teaching about stack function calls
Scope and Sequence for Raspberry Pi Course
Instructional Methods for In-class Code Demos
What should be the difference between a university course and developer training?
Problematic student at a very high level
Demographics in Programming Teams in Early CS Courses
What are good projects for metaprogramming?
Colors in Blocks-based Languages
How to respond when students ask "is recursion good practice"?
Suggestions for encouraging good Coding Practices?
How can I incorporate agile development into CS1/CS2 courses?
What are good/bad topics for a non-major CS0 course?
Genetic Algorithm enrichment lesson
Why is the critical-section problem always presented with code in infinite loops?
Learning about the Blockchain
Deep Learning Teaching Resources
Homework Policy for Advanced/Honors Students
How to teach students not to use jump statements
Teaching identifier naming conventions
The importance of writing understandable code
Analogy for abstract classes
Teaching Other Markup Languages
How to teach which loop should be used
Explaining how an Interface is a contract
Teaching with just a single Makey Makey and Sphero
What is a good analogy for pass by value vs by reference?
